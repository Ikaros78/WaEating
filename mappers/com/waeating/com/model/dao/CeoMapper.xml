<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.waeating.com.model.dao.CeoMapper">
	<resultMap type="com.waeating.com.model.dto.ComInfoDTO" id="generalCompanyResultMap">
		<id property="comNo" column="COM_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="comName" column="COM_NAME"/>
		<result property="category" column="CATEGORY"/>
		<result property="comAddress" column="COM_ADDRESS"/>
		<result property="comPhone" column="COM_PHONE"/>
		<result property="comRegist" column="COM_REGIST"/>
		<result property="waitYn" column="WAIT_YN"/>
		<result property="workTime" column="WORK_TIME"/>
		<result property="holiday" column="HOLIDAY"/>
		
	</resultMap>

	<resultMap type="com.waeating.member.model.dto.MemberDTO" id="generalCeoResultMap">
		<id property="id" column="MEMBER_ID"/>
		<result property="pwd" column="MEMBER_PWD"/>
		<result property="email" column="EMAIL"/>
		<result property="name" column="NAME"/>
		<result property="memberType" column="MEMBER_TYPE"/>
		<result property="phone" column="PHONE"/>
		<result property="emailCheck" column="EMAIL_CHECK"/>
		
		<association property="comInfo" resultMap="generalCompanyResultMap"/>
	</resultMap>
	
  <!-- 업주 로그인 -->
  <insert id="insertMember" parameterType="com.waeating.member.model.dto.MemberDTO">
		INSERT
		  INTO MEMBER_INFO A
		(
		  A.MEMBER_ID
		, A.MEMBER_PWD
		, A.EMAIL
		, A.NAME
		, A.MEMBER_TYPE
		, A.PHONE
		, A.EMAIL_CHECK
		)
		VALUES
		(
		  #{ id }
		, #{ pwd }
		, #{ email }
		, #{ name }
		, #{ memberType }
		, #{ phone }
		, null
		)
	</insert>
  
  <insert id="insertComInfo" parameterType="com.waeating.com.model.dto.ComInfoDTO">
  	INSERT
  	  INTO COM_INFO A
  	(
  	  A.COM_NO
	, A.MEMBER_ID
	, A.COM_NAME
	, A.CATEGORY
	, A.COM_ADDRESS
	, A.COM_PHONE
	, A.COM_REGIST
	, A.WAIT_YN
	, A.WORK_TIME
	, A.HOLIDAY
	)
	VALUES
	(
	  SEQ_COMNO.NEXTVAL
	, #{ memberId }
	, #{ comName }
	, #{ category }
	, #{ comAddress }
	, #{ comPhone }
	, #{ comRegist }
	, 'Y'
	, null
	, null
	)
	<selectKey keyProperty="comNo" resultType="Integer" order="AFTER">
		SELECT
				SEQ_COMNO.CURRVAL
		FROM DUAL
	</selectKey>
  </insert>
  
  <insert id="insertComRecord" parameterType="com.waeating.com.model.dto.ComRecordDTO">
  	INSERT
  	  INTO COM_RECORD
  	(
	  RECORD_NO
	, REFUSE_REASON
	, COM_NO
	, COM_STATUS
  	)
  	VALUES
  	(
  	  SEQ_RECORDNO.NEXTVAL
  	, null
  	, #{ comNo }
  	, '승인대기'
  	)
  </insert>
  
  <select id="dubleCkId" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM USER_INFO
		 WHERE MEMBER_ID = #{ dubleCkId }
  </select>
  
  <select id="selectEncryptedPwd" resultType="java.lang.String">
		SELECT
				A.MEMBER_PWD
		  FROM MEMBER_INFO A
		 WHERE A.MEMBER_TYPE = #{ memberType }
		   AND A.MEMBER_ID = #{ id }
  </select>
  
  <select id="selectMemberLogin" resultMap="generalCeoResultMap" >
		SELECT
				A.MEMBER_ID
			  , A.MEMBER_PWD
			  , A.EMAIL
			  , A.NAME
			  , A.PHONE
			  , B.COM_NO
			  , B.COM_NAME
			  , B.CATEGORY
			  , B.COM_ADDRESS
			  , B.COM_PHONE
			  , B.COM_REGIST
			  , B.WAIT_YN
			  , B.WORK_TIME
			  , B.HOLIDAY
			FROM MEMBER_INFO A
			JOIN COM_INFO B ON(A.MEMBER_ID = B.MEMBER_ID)
		   WHERE A.MEMBER_ID = #{ id }
  </select>
	<select id="selectFindIdForPhone" resultMap="generalCeoResultMap" >
		SELECT
				A.MEMBER_ID
			FROM MEMBER_INFO A
			JOIN COM_INFO B ON(A.MEMBER_ID = B.MEMBER_ID)
		   WHERE A.NAME = #{ name }
		     AND A.PHONE = #{ phone }
		     AND B.COM_NAME = #{ comInfo.comName }
		     AND B.COM_PHONE = #{ comInfo.comPhone }
		     AND B.CATEGORY = #{ comInfo.category }
	</select>
	
	<select id="checkFindPwdForPhone" resultMap="generalCeoResultMap" >
		SELECT
			   A.MEMBER_PWD
		  FROM MEMBER_INFO A
		  JOIN COM_INFO B ON(A.MEMBER_ID = B.MEMBER_ID)
		 WHERE A.MEMBER_ID = #{ id }
		   AND A.NAME = #{ name }
		   AND A.PHONE = #{ phone }
		   AND B.COM_NAME = #{ comInfo.comName }
		   AND B.COM_PHONE = #{ comInfo.comPhone }
		   AND B.CATEGORY = #{ comInfo.category }
	</select>
	
	<update id="updateNewPwd" parameterType="com.waeating.member.model.dto.MemberDTO">
		UPDATE 
			   MEMBER_INFO A
		   SET A.MEMBER_PWD = #{ pwd }
		 WHERE A.MEMBER_ID = #{ id }
	</update>
	<update id="updateCeoInformation" parameterType="com.waeating.member.model.dto.MemberDTO">
		UPDATE 
			   MEMBER_INFO A
		   SET 
		       A.MEMBER_PWD = NVL(#{ pwd }, A.MEMBER_PWD)
		     , A.NAME = NVL(#{ name }, A.NAME)
		     , A.PHONE = NVL(#{ phone }, A.PHONE)
		     , A.EMAIL = NVL(#{ email }, A.EMAIL)
		 WHERE A.MEMBER_ID = #{ id }
	</update>
	<update id="updateComRegist" parameterType="com.waeating.com.model.dto.ComInfoDTO">
		UPDATE 
			   COM_INFO A
		   SET 
		       A.COM_REGIST = NVL(#{ comRegist }, A.COM_REGIST)
		 WHERE A.MEMBER_ID = #{ memberId }
	</update>
	
	<select id="selectFindIdForEmail" resultMap="generalCeoResultMap" >
		SELECT
				A.MEMBER_ID
			FROM MEMBER_INFO A
			JOIN COM_INFO B ON(A.MEMBER_ID = B.MEMBER_ID)
		   WHERE A.NAME = #{ name }
		     AND A.EMAIL = #{ email }
		     AND B.COM_NAME = #{ comInfo.comName }
		     AND B.COM_PHONE = #{ comInfo.comPhone }
		     AND B.CATEGORY = #{ comInfo.category }
	</select>
	
	<select id="checkFindPwdForEmail" resultMap="generalCeoResultMap" >
		SELECT
			   A.MEMBER_PWD
		  FROM MEMBER_INFO A
		  JOIN COM_INFO B ON(A.MEMBER_ID = B.MEMBER_ID)
		 WHERE A.MEMBER_ID = #{ id }
		   AND A.NAME = #{ name }
		   AND A.EMAIL = #{ email }
		   AND B.COM_NAME = #{ comInfo.comName }
		   AND B.COM_PHONE = #{ comInfo.comPhone }
		   AND B.CATEGORY = #{ comInfo.category }
	</select>
</mapper>